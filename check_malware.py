import re
import pickle
import pandas as pd
import tensorflow as tf

def check_malware(df):
    '''
        Checks for Malware
    '''
    ImportedDlls_edit = []
    for i in range(df.shape[0]):
        # Selecting a row
        t1 = df['ImportedDlls'][i]
        # Splitting & removing 'dll' extension
        t2 = [i.lower().rstrip('.dll') for i in t1.split()]
        # Removing numbers from words
        t3 = [re.sub('[^a-zA-Z]', '', i) for i in t2]
        ImportedDlls_edit.append(" ".join(t3))

    # load the tfidf model from disk & creating tfidf vector
    tfidf_vectorizer = pickle.load(open('tfidf_vectorizer_dll.sav', 'rb'))
    tfidf_array = tfidf_vectorizer.transform(ImportedDlls_edit).toarray()

    # converting into dataframe
    columns_data = tfidf_vectorizer.get_feature_names()
    tfidf_df = pd.DataFrame(data=tfidf_array, columns=columns_data)

    # load the common-dlls list from disk
    with open("common_dll.txt", "rb") as fp:
        common_dll = pickle.load(fp)
    
    # feature selection
    for i in common_dll:
        if i not in columns_data:
            common_dll.remove(i)
    tfidf_df.drop(columns=common_dll, inplace=True)

    # merging all the features
    df.drop(columns=['ImportedDlls', 'ImportedSymbols'], inplace=True)
    final_df = pd.concat([df, tfidf_df], axis=1)

    # load the standard-scalar model from disk & normalizing them
    sc = pickle.load(open('StandardScaler.sav', 'rb'))
    final_df_sc = sc.transform(final_df.values)

    # load the PCA model from disk & reducing the feature-dimensions
    pca = pickle.load(open('PCA.sav', 'rb'))
    X = pca.transform(final_df_sc)

    # load the ML model from disk
    # rfc = pickle.load(open('model.sav', 'rb'))
    # pred = rfc.predict(X)
    # prob = rfc.predict_proba(X)

    rfc = tf.keras.models.load_model('model.h5')
    pred = rfc.predict_classes(X)
    prob = rfc.predict(X)

    classes = []
    for i in pred:
        if i==1:
            classes.append('Malware')
        else:
            classes.append('Goodware')
        
    return classes, prob, pred